%%MOP2.m
%% 
function z = MOP2(x)
%  Initial condition
%% Equation of hydrologic equilibrium
P = load('P.mat');
P = struct2array(P); % Transform the structure into an array
ETo = load('ETo.mat');
ETo = struct2array(ETo);
Ke = load('Ke.mat');
Ke = struct2array(Ke);
T = load('T.mat');
T = struct2array(T);
Z = load('Z.mat');
Z = struct2array(Z);
CR = load('CR.mat');
CR = struct2array(CR);
RA = load('RA.mat');
RA = struct2array(RA);
FT = load('FT.mat');
FT = struct2array(FT);
HUI = load('HUI.mat');
HUI = struct2array(HUI);
WA = 50; % Light-to-bioenergy conversion ratio
HIp = 0.48;  % Potential harvest index
Hi = 0.45;  % Economic coefficient
WSYF =0.5 ;  % Drought sensitive factors
%%  Carbon emission
Cz = 900;  % (kg/ha)
CH4 = 3500;  % (kg/ha)
NO2 = 1400;  %（kg/ha）
SOC = 0.753;  % (g/m2)
k = 0.014;  % The turnover rate of soil carbon pool (day)
Tf = 25; % Reference temperature of heterotrophic respiration
hmin = -14887;  % Minimum water potential
hmax = -100;  % Maximum water potential
a = 1.29;
b = -1.05;
c = 1.36;
d = -1.05;
A = 1;  % Area
Td = load('Td.mat');
Td = struct2array(Td);
r = load('r.mat');
r = struct2array(r);
Ws = load('Ws.mat');
Ws = struct2array(Ws);
Cf = 0.41;  % Conversion ratio of dry weight to carbon（t CO2eq）
CSOC = 1.316;  % Organic carbon contents of soil（%）
CSOC0 = 1.0415; % Initial soil organic carbon content（%）
dr = 1.36;  % Volumetric weight(g/cm3)
H = 40;  % Depth（cm）
t = 1;  % Year（a）
t0 = 0;  % Base year
n = 1; % Randomly generated number
y_values = zeros(n, 1); % Initialize the y-value array
for j = 1:n
% Random formation
   v = round(rand*(20-6)+6, 1);
   WW0 = [72; zeros(130, 1)];  % The initial WW0 is known to be 72   
   WW1 = zeros(131, 1); % Water content on day i ( including water layer )
    I = zeros(131, 1);   % Irrigation amount in growth period on day i
    for i = 1:131
% Calculate W1
    W1 = fsolve(@(W1) W1 - WW0(i) - I(i) - P(i) + Ke(i) * E(ETo(i), W1) + T(i) + DP(Z(i), W1) - CR(i), 0);
    ET(i) =  Ke(i) * E(ETo(i), W1) + T(i);

    WW0(i + 1) = W1;

    WW1(i) = W1;

    if WW1(i) > v
        I(i+1) = 0;
    else 
        I(i+1) = 20 - WW1(i);
    end
    end
    WW1(find(WW1>72))=72;
%% Water stress
    WWW1 = 22.*(WW1>22)+WW1.*(WW1>0 & WW1<=22) +0.*(WW1<0); 
%  WWW1 ：Soil water content of tillage layer，mm
    WWW1(find(WWW1<6))=6 ;% Constraint
    h = -420*((WWW1-2.68)/(22-2.68)).^(-1/0.3); % Soil suction，mm
    FW=0.*(h<=-14887|h>0)+((h+0)/(-450+0)).*(h>-450 & h<=0)+1.*(h>-4770 & h<=-450)+((h+14887)/(-4770+14887)).*(h>-14887 & h<=-4770);
% lower limit
  FW1=0.*(WWW1<=6)+((WWW1-6)/(22-6)).*(WWW1>6 & WWW1<=22)+1.*(WWW1>22);
%% Canopy cover
    CC0 = load('CC0.mat');
    CC0 = struct2array(CC0);
    FTC = load('FTC.mat');
    FTC = struct2array(FTC);
    CCD0 = load('CCD0.mat');
    CCD0 = struct2array(CCD0);
    CGC = min(FW(1:97,1:1),FTC(1:97,1:1));  % Canopy growth stress factors
    CDC = 1-(min(FW(98:131,1:1),FTC(98:131,1:1)).^8);
    CCD = CCD0.*[CGC;CDC];
    CC = cumsum(CCD,1);  % Actual canopy coverage
    CC1 = 1.72.*CC-CC.*CC+0.3.*((CC).^3);  
    LAI =-log(1-((CC1).^(1/1.2))/1.005)/0.6;  % LAI 
    LAI0 = load('LAI0.mat');
    LAI0 = struct2array(LAI0);
    LAI1 = load('LAI1.mat');
    LAI1 = struct2array(LAI1);
    LAI2 = sum(LAI1.*FW);  % Actual LAI at full heading stage
%% Crop transpiration Tr
    Tr = FW.*1.1.*CC1; 
%% Aboveground biomass-light energy drive
     PDT = load('PDT.mat');
     PDT = struct2array(PDT);
     I01 = load('I01.mat');
     I01= struct2array(I01);
     I02 = load('I02.mat');
     I02= struct2array(I02);
     I03 = load('I03.mat');
     I03= struct2array(I03);
     P1 = load('P1.mat');
     P1= struct2array(P1);
     P2 = load('P2.mat');
     P2= struct2array(P2);
     P3 = load('P3.mat');
     P3= struct2array(P3);
     K = load('K.mat');
     K= struct2array(K);
     FGWZCO2 = load('FGWZCO2.mat');
     FGWZCO2= struct2array(FGWZCO2);
     FA = load('FA.mat');
     FA= struct2array(FA);
     FTGWZ = load('FTGWZ.mat');
     FTGWZ= struct2array(FTGWZ);
     DL = load('DL.mat');
     DL= struct2array(DL); % 
     LGUSS1 = 0.0469*LAI; % Leaf area index of canopy
     LGUSS2 = 0.2308*LAI;
     LGUSS3 = 0.5*LAI;  
     LGUSS4 = 0.7691*LAI;
     LGUSS5 = 0.9531*LAI;
     I11 =K.*(1-P1).*I01.*exp(-K.*LGUSS1); 
% I11 Photosynthetically active radiation absorbed by the first layer of the canopy at the first moment，J*m-2*s-1
     I12 =K.*(1-P1).*I01.*exp(-K.*LGUSS2); 
     I13 =K.*(1-P1).*I01.*exp(-K.*LGUSS3); 
     I14 =K.*(1-P1).*I01.*exp(-K.*LGUSS4); 
     I15 =K.*(1-P1).*I01.*exp(-K.*LGUSS5); 

     I21 =K.*(1-P2).*I02.*exp(-K.*LGUSS1); 
% I21 Photosynthetically active radiation absorbed by the first layer of the canopy at the second moment，J*m-2*s-1
     I22 =K.*(1-P2).*I02.*exp(-K.*LGUSS2); 
     I23 =K.*(1-P2).*I02.*exp(-K.*LGUSS3); 
     I24 =K.*(1-P2).*I02.*exp(-K.*LGUSS4); 
     I25 =K.*(1-P2).*I02.*exp(-K.*LGUSS5); 

     I31 =K.*(1-P3).*I03.*exp(-K.*LGUSS1); 
     I32 =K.*(1-P3).*I03.*exp(-K.*LGUSS2); 
     I33 =K.*(1-P3).*I03.*exp(-K.*LGUSS3); 
     I34 =K.*(1-P3).*I03.*exp(-K.*LGUSS4); 
     I35 =K.*(1-P3).*I03.*exp(-K.*LGUSS5); 
     MAX = 54; %  The maximum photosynthetic rate of leaves under the conditions of optimum physiological age, temperature and nutrition.
     AMAX =MAX.*FGWZCO2.*FA.*FTGWZ.*FW1; 
% AMAX Photosynthetic rate at saturation light intensity
% Single leaf photosynthesis
     P11 = AMAX.*(1-exp(-0.54.*I11./AMAX)); 
     P12 = AMAX.*(1-exp(-0.54.*I12./AMAX)); 
     P13 = AMAX.*(1-exp(-0.54.*I13./AMAX)); 
     P14 = AMAX.*(1-exp(-0.54.*I14./AMAX)); 
     P15 = AMAX.*(1-exp(-0.54.*I15./AMAX)); 
     P21 = AMAX.*(1-exp(-0.54.*I21./AMAX)); 

     P22 = AMAX.*(1-exp(-0.54.*I22./AMAX)); 
     P23 = AMAX.*(1-exp(-0.54.*I23./AMAX)); 
     P24 = AMAX.*(1-exp(-0.54.*I24./AMAX)); 
     P25 = AMAX.*(1-exp(-0.54.*I25./AMAX)); 
     P31 = AMAX.*(1-exp(-0.54.*I31./AMAX)); 

     P32 = AMAX.*(1-exp(-0.54.*I32./AMAX)); 
     P33 = AMAX.*(1-exp(-0.54.*I33./AMAX)); 
     P34 = AMAX.*(1-exp(-0.54.*I34./AMAX)); 
     P35 = AMAX.*(1-exp(-0.54.*I35./AMAX)); 
     % Canopy photosynthesis
  TP1 =(P11.*0.1185+P12.*0.2393+P13.*0.2844+P14.*0.2393+P15.*0.1185).*LAI; 
  TP2 =(P21.*0.1185+P22.*0.2393+P23.*0.2844+P24.*0.2393+P25.*0.1185).*LAI; 
  TP3 =(P31.*0.1185+P32.*0.2393+P33.*0.2844+P34.*0.2393+P35.*0.1185).*LAI; 

     DTGA = (TP1.*0.2778+TP2.*0.4444+TP3.*0.2778).*0.682.*DL; 
% DTGA Daily total photosynthetic rate of the whole canopy  kg*CH2O*hm-2*d-1
% Maintenance respiration
     RMT0 = 0.0091-0.0001.*PDT; % RMT0 Maintaining respiration rate at 25 °C
     Q10 = load('Q10.mat');
     Q10= struct2array(Q10);
% Growth respiration
    Rg = 0.20; % Growth respiration coefficient
    RG = Rg.*DTGA; % RG Growth respiration consumption kg*CH2O*hm-2*d-1
    ABIOMASS0 = 11 % ABIOMASS0 Initial aboveground biomass kg/ha
    ABIOMASS0 = [11; zeros(130, 1)];
    ABIOMASS1 = zeros(131, 1); % Aboveground biomass on day i kg/hm-2
    for i = 1:131
% Compute A1
     A1 = fsolve(@(A1) A1 - ABIOMASS0(i) - (DTGA(i)-RMT0(i).*ABIOMASS0(i).*Q10(i)-RG(i))./0.95, 0);
%
     ABIOMASS0(i + 1) = A1;
% 
      ABIOMASS1(i) = A1;
     end
     disp('计算得到的ABIOMASS1:');
     disp(ABIOMASS1);
     ABIOMASS1 = 0.001.*ABIOMASS1; %t/hm-2
%% Target 1-Yield Y
% Potential growth calculation
    PAR = 0.5.*RA.*(1-exp(-0.65.*LAI));
    Bp = 0.001.*WA.*PAR;
% Calculation of actual growth
    Ba = Bp.*min(FW,FT);
% Throughput accounting
    HIa = HIp/(1+WSYF*(0.9-FW(131,1))*max(0,sin((3.14/2)*((HUI(131,1)-0.3)/0.3))));
    y_values(j)= A*HIa*sum(Ba);  %kg/ha
    y = y_values';
    vn(j) = v;
%% Target 2 - Carbon emissions
% Soil respiration
      Q110 = a-b.*Td+c.*WWW1+d.*(WWW1.^2); 
      Ts = Q110.^((Td-Tf)/10);
      RH = 44/12.*SOC.*k.*Ts.*Ws;
      Cs = A.*RH;
     CS =1000*sum(Cs);  %kg CO2eq
% Plant carbon fixation
    Cd1 = 1/0.45*Cf*ABIOMASS1(131,1);  % kg CO2eq
% Soil carbon sequestration
    Ct = dr*H*CSOC*A;
    C0 = dr*H*CSOC0*A;
    C = 44/12*(Ct-C0)/(t-t0);  % g C
% Carbon emissions sum
     C1(j)= Cz+CH4+NO2+CS-Cd1-C;
%% Irrigation capacity
    I1 = sum(I);
    I0(j) = 189+I1;
end
disp('输入的v值:');
disp(vn);
disp('计算得到的y值:');
disp(y_values);
disp(C1);
disp(I0);
%% Script function
 % Soil evaporation
    function E_result = E(ETO, W1)
        Kr = min(1, max(0, (exp(0.4 * W1 / 22) - 1) / (exp(0.4) - 1)));
        E_result = Kr * ETO;
    end
% Reduction rate of soil water content
    function L_result = L(W1)
        L_result = min(1, max(0, (exp(W1 - 20) - 1) / (exp(2) - 1)));
    end
%  Amount of leakage，mm
    function DP_result = DP(Z, W1)
        DP_result = 0.476 * 0.04468 * Z * L(W1);
    end
%% Calculate the objective function value
f1 = 1./y;
f11 =  real(f1);
f3 =C1;
f33 = real(f3);
f2 = I0;
f22 = real(f2);    
z = [f11;f22;f33];
 end
